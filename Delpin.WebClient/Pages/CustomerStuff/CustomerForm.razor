<EditForm Model="@Customer" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="simple-form ">
        
        <div class="form-group">
            <label>Navn:</label>
            <InputText @bind-Value="@Customer.FullName" class="form-control" />
            <ValidationMessage For="@(() => Customer.FullName)" />
        </div>        
        <div class="form-group">
            <label>Mobilnr.:</label>
            <InputNumber @bind-Value="@Customer.PhoneNo" class="form-control" />
            <ValidationMessage For="@(() => Customer.PhoneNo)" />
        </div>        
        <div class="form-group">
            <label>E-mail:</label>
            <InputText @bind-Value="@Customer.Email" class="form-control" />
            <ValidationMessage For="@(() => Customer.Email)" />
        </div>       
        <div class="form-group">
            <label>Vej og number:</label>
            <InputText @bind-Value="@Customer.Street" class="form-control"/>
            <ValidationMessage For="@(() => Customer.Street)" />
        </div>       
        <div class="form-group">
            <label>Postnummer:</label>
            <InputNumber @bind-Value="@Customer.ZipCode" class="form-control"/>
            <ValidationMessage For="@(() => Customer.ZipCode)" />
        </div>       
        <div class="form-group">
            <label>By:</label>
            <InputText @bind-Value="@Customer.City" class="form-control"/>
            <ValidationMessage For="@(() => Customer.City)" />
        </div>        
        <div class="form-group">
            <label>Kundetype:</label>
            @foreach (var choice in new[] { Delpin.WebClient.Enum.CustomerTypeEnum.Erhverv, Delpin.WebClient.Enum.CustomerTypeEnum.Privat })
            {
                <label>
                    <input name="type" type="radio" 
                           value="@choice"
                           checked="@(Customer.CustomerType == choice)"
                           @onchange="@(() => { Customer.CustomerType = choice; })">
                    <ValidationMessage For="@(() => Customer.CustomerType)" />
                    @choice.ToString()
                </label>
            }

        </div>
    </div>
    <button type="submit" class="btn btn-primary">
        @ButtonText
    </button>

</EditForm>


@code {
    [Parameter] public CustomerViewModel.CustomerDetails Customer { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Gem";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private Delpin.WebClient.Enum.CustomerTypeEnum CurrentChoice {get; set; }


    protected override async Task OnInitializedAsync()
    {
        int tal = 7;
        Console.WriteLine(tal);
    }



}