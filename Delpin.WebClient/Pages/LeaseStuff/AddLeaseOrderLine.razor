
@inject HttpClient http
@inject NavigationManager uriHelper
@inject IJSRuntime js
@inject IModalDialogService ModalDialogService

<h3>Tilføj OrderLinje</h3>

<AddLeaseOrderLineForm ButtonText="Tilføj OrderLinje" LeaseOrderLine="@LeaseOrderline"
              OnValidSubmit="@Create" />
@if (Isloading == true)
{
    <i class="fa fa-circle-o-notch fa-spin myicons text-center mt-2" aria-hidden="true"></i>
}

@code {

    [Parameter] public Guid LeaseId { get; set; }

    [Parameter] public Guid ResourceId { get; set; }

    [Parameter] public ResourceViewModel.ResourceDetails Resource { get; set; }

    LeaseViewModel.AddLeaseOrderLineToLeaseOrder LeaseOrderline = new LeaseViewModel.AddLeaseOrderLineToLeaseOrder();
    ResourceViewModel.ResourceDetails resource = new ResourceViewModel.ResourceDetails();

    bool Isloading = false;

    async Task Create()
    {
        LeaseDto.AddLeaseOrderLineToLeaseOrder leaseDto = AddLeaseOrderLineToLeaseOrderMapper.Map(LeaseOrderline);

        Isloading = true;
        try
        {

            var LeaseOrderLineId = Guid.NewGuid();
            var RessourceId = Guid.NewGuid();
            var IsReturned = false;

            var response = await http.PostAsJsonAsync($"gateway/lease/AddLeaseOrderLine?LeaseId={LeaseId}&LeaseOrderLineId={LeaseOrderLineId}&ResourceId={Resource.ResourceId}&StartDate={leaseDto.StartDate}&EndDate={leaseDto.EndDate}&IsReturned={IsReturned}&ResourceName={Resource.ResourceName}&ResourcePrice={Resource.ResourcePrice}&Quantity={leaseDto.Quantity}", leaseDto);
            

            if (response.IsSuccessStatusCode)
            {

                await js.InvokeVoidAsync("alert", $"OrderLinjen er nu tilføjet!");

            }
            else
            {
                await js.InvokeVoidAsync("alert", $"Noget gik galt! Prøv igen.");
            }

        }
        catch (Exception)
        {

            await js.InvokeVoidAsync("alert", $"Noget gik galt! Prøv igen.");
        }

        Isloading = false;
    }



    protected async override Task OnParametersSetAsync()
    {
        int tal = 7;

        Console.WriteLine(tal);

    }

}