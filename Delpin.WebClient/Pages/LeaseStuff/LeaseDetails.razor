@inject HttpClient http
@inject NavigationManager uriHelper
@inject IJSRuntime js
@inject IModalDialogService ModalDialog

@page "/lease/details/{LeaseId}"


<section>
    <h3>Ordredetaljer</h3>
    <p>ID: @LeaseId</p>

    <button @onclick="Edit_Clicked" class="btn btn-primary float-right mr-3">Rediger ordre</button>

</section>

@if (lease == null)
{
    <i class="fa fa-circle-o-notch fa-spin myicons" aria-hidden="true"></i>
}
else
{
    <p>KundeId: @lease.BuyerId</p>
    <p>Kundenavn: @lease.BuyerName</p>
    <p>Adresse: @lease.Street</p>
    <p>By: @lease.ZipCode @lease.City</p>
    <p>Skal leveres? @lease.IsDelivery</p>
    <p>Er betalt? @lease.IsPaid</p>
    <p>Totalpris: @lease.TotalPrice</p>
    <p>Er slettet? @lease.IsDeleted</p>
}


<section>

    <button @onclick="@(() => AddLeaseOrderlines_Clicked())" class="btn btn-primary float-right mr-3">Tilføj OrderLinje</button>

</section>


<table class="table">
    <thead>
        <tr>
            <th>Start Dato</th>
            <th>Slut Dato</th>
            <th>Afleveret?</th>
            <th>Vare Navn</th>
            <th>Vare Pris</th>
            <th>Antal</th>
            <th>Total</th>

            <th> </th>
            <th> </th>
        </tr>
    </thead>
    <tbody>

       @if (lease == null)
        {
            <i class="fa fa-circle-o-notch fa-spin myicons" aria-hidden="true"></i>
        }
        else
        {
           @foreach (var lease in lease.leaseOrderLines)
            {
                <tr>
                    <td>@lease.StartDate</td>
                    <td>@lease.EndDate</td>
                    <td>@lease.IsReturned</td>
                    <td>@lease.RessourceName</td>
                    <td>@lease.RessourcePrice</td>
                    <td>@lease.Quantity</td>
                    <td>@lease.LineTotalPrice</td>

                    <td>
                        <button @onclick="@(() => EditLeaseOrderLine_Clicked(lease.LeaseOrderLineId))" class="btn btn-primary float-right mr-3">Rediger</button>
                    </td>
                    <td>
                        <button class="btn btn-danger" @onclick="@(() => Delete(leaseOrderLine))">Slet</button>
                    </td>

                </tr>
            }
        }
    </tbody>
</table>


@code {
    [Parameter] public string LeaseId { get; set; }

    LeaseViewModel.LeaseOrderDetails lease = new LeaseViewModel.LeaseOrderDetails();


    LeaseViewModel.AddLeaseOrderLineToLeaseOrder leaseOrderLine = new LeaseViewModel.AddLeaseOrderLineToLeaseOrder();

    


    bool Isloading = false;

    protected override async Task OnInitializedAsync()
    {
        Isloading = true;
        lease = await http.GetFromJsonAsync<LeaseViewModel.LeaseOrderDetails>($"gateway/lease/id?LeaseId={LeaseId}");

        Isloading = false;
    }


    async void Edit_Clicked()
    {
        ModalDialogParameters parameters = new ModalDialogParameters();
        parameters.Add("LeaseId", Guid.Parse(LeaseId));

        ModalDialogResult result = await ModalDialog.ShowDialogAsync<EditLease>("", new ModalDialogOptions(), parameters);
        if (result.Success)
        {
            var searchterm = result.ReturnParameters.Get<string>("LeaseId");
        }
    }

    async void AddLeaseOrderlines_Clicked()
    {
        ModalDialogParameters parameters = new ModalDialogParameters();
        parameters.Add("LeaseId", Guid.Parse(LeaseId));

        ModalDialogResult result = await ModalDialog.ShowDialogAsync<AddLeaseOrderLine>("", new ModalDialogOptions(),parameters);
    }

    async void EditLeaseOrderLine_Clicked(Guid Id)
    {
        ModalDialogParameters parameters = new ModalDialogParameters();
        parameters.Add("LeaseId", Guid.Parse(LeaseId));
        

        ModalDialogResult result = await ModalDialog.ShowDialogAsync<EditLeaseOrderLine>("", new ModalDialogOptions(), parameters);
        if (result.Success)
        {
            var searchterm = result.ReturnParameters.Get<string>("LeaseId");
        }

    }

    async Task Delete(LeaseViewModel.AddLeaseOrderLineToLeaseOrder lease)
    {
        LeaseDto.AddLeaseOrderLineToLeaseOrder leaseDto = AddLeaseOrderLineToLeaseOrderMapper.Map(lease);

        if (await js.InvokeAsync<bool>("confirm", $"Vil du slette {leaseDto.RessourceName}?"))
        {
            await http.DeleteAsync($"gateway/lease/leaseOrderLine?LeaseId={leaseDto.LeaseId}");
            
        }
    }

}
