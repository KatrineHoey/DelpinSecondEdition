// <auto-generated />
using System;
using Lease.Infrastructure.Shared;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lease.Infrastructure.Migrations
{
    [DbContext(typeof(LeaseDbContext))]
    [Migration("20201109190139_noValues")]
    partial class noValues
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lease.Domain.LeaseOrder", b =>
                {
                    b.Property<Guid>("leaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelivery")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("leaseId");

                    b.ToTable("Leases");
                });

            modelBuilder.Entity("Lease.Domain.LeaseOrderLine", b =>
                {
                    b.Property<Guid>("LeaseOrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<Guid>("LeaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LeaseOrderleaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LineTotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RessourceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RessourcePrice")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LeaseOrderLineId");

                    b.HasIndex("LeaseOrderleaseId");

                    b.ToTable("LeaseOrderLines");
                });

            modelBuilder.Entity("Lease.Domain.LeaseOrder", b =>
                {
                    b.OwnsOne("Lease.Domain.LeaseOrderId", "Id", b1 =>
                        {
                            b1.Property<Guid>("LeaseOrderleaseId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("LeaseOrderleaseId");

                            b1.ToTable("Leases");

                            b1.WithOwner()
                                .HasForeignKey("LeaseOrderleaseId");
                        });
                });

            modelBuilder.Entity("Lease.Domain.LeaseOrderLine", b =>
                {
                    b.HasOne("Lease.Domain.LeaseOrder", null)
                        .WithMany("LeaseOrderLines")
                        .HasForeignKey("LeaseOrderleaseId");

                    b.OwnsOne("Lease.Domain.LeaseOrderLineId", "Id", b1 =>
                        {
                            b1.Property<Guid>("LeaseOrderLineId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("LeaseOrderLineId");

                            b1.ToTable("LeaseOrderLines");

                            b1.WithOwner()
                                .HasForeignKey("LeaseOrderLineId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
